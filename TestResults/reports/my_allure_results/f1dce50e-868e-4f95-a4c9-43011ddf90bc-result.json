{"name": "test_53_query_new_order_contents", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "login_success = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dcb9e4d40d36b3a9eaf3d9076f19475e\")>, <PageObjects.login_page...144C6A08FD0>, <PageObjects.device_manage_subpage_objects.DeviceManageSubPageObjects object at 0x00000144C6A37190>, ...)\n\n    @pytest.fixture(scope='function')\n    def click_device_manage(login_success):\n        # 点击iot设备管理-点击设备管理\n>       login_success[3].click_IOT_device_manage()\n\nTestCases\\conftest.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjects\\home_page_objects.py:20: in click_IOT_device_manage\n    self.click_element(loc.iot_device_manage,module='主界面-点击IOT设备管理')\nCommon\\base_page_object.py:138: in click_element\n    self.wait_element_visible(loc, module, timeout, poll_frequency)\nCommon\\base_page_object.py:55: in wait_element_visible\n    WebDriverWait(self.driver, timeout, poll_frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"dcb9e4d40d36b3a9eaf3d9076f19475e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000144C6A375E0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\wangzhicheng\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "372623f5-335a-4e07-b627-01f6f3adddb3-attachment.txt", "type": "text/plain"}], "start": 1600419106562, "stop": 1600419106562, "uuid": "06571c43-12d1-466c-91c7-30fb7205b12e", "historyId": "4bd5fc6c2aff053dc127b55279e89362", "testCaseId": "01fa24f408bf54c5ce573ffb74982c01", "fullName": "TestCases.test_04_device_more_info_page.TestDeviceMoreInfoPage#test_53_query_new_order_contents", "labels": [{"name": "tag", "value": "test"}, {"name": "tag", "value": "db"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_04_device_more_info_page"}, {"name": "subSuite", "value": "TestDeviceMoreInfoPage"}, {"name": "host", "value": "DESKTOP-44RINL3"}, {"name": "thread", "value": "22256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_04_device_more_info_page"}]}